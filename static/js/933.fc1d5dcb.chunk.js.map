{"version":3,"file":"static/js/933.fc1d5dcb.chunk.js","mappings":"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","sources":["../node_modules/zrender/lib/svg/SVGPathRebuilder.js","../node_modules/zrender/lib/svg/mapStyleToAttrs.js","../node_modules/zrender/lib/svg/core.js","../node_modules/zrender/lib/svg/cssClassId.js","../node_modules/zrender/lib/svg/cssAnimation.js","../node_modules/zrender/lib/svg/cssEmphasis.js","../node_modules/zrender/lib/svg/graphic.js","../node_modules/zrender/lib/svg/domapi.js","../node_modules/zrender/lib/svg/patch.js","../node_modules/zrender/lib/svg/Painter.js","../node_modules/echarts/lib/renderer/installSVGRenderer.js"],"sourcesContent":["import { isAroundZero } from './helper.js';\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\nvar PI2 = Math.PI * 2;\nvar degree = 180 / PI;\nvar SVGPathRebuilder = (function () {\n    function SVGPathRebuilder() {\n    }\n    SVGPathRebuilder.prototype.reset = function (precision) {\n        this._start = true;\n        this._d = [];\n        this._str = '';\n        this._p = Math.pow(10, precision || 4);\n    };\n    SVGPathRebuilder.prototype.moveTo = function (x, y) {\n        this._add('M', x, y);\n    };\n    SVGPathRebuilder.prototype.lineTo = function (x, y) {\n        this._add('L', x, y);\n    };\n    SVGPathRebuilder.prototype.bezierCurveTo = function (x, y, x2, y2, x3, y3) {\n        this._add('C', x, y, x2, y2, x3, y3);\n    };\n    SVGPathRebuilder.prototype.quadraticCurveTo = function (x, y, x2, y2) {\n        this._add('Q', x, y, x2, y2);\n    };\n    SVGPathRebuilder.prototype.arc = function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n        this.ellipse(cx, cy, r, r, 0, startAngle, endAngle, anticlockwise);\n    };\n    SVGPathRebuilder.prototype.ellipse = function (cx, cy, rx, ry, psi, startAngle, endAngle, anticlockwise) {\n        var dTheta = endAngle - startAngle;\n        var clockwise = !anticlockwise;\n        var dThetaPositive = Math.abs(dTheta);\n        var isCircle = isAroundZero(dThetaPositive - PI2)\n            || (clockwise ? dTheta >= PI2 : -dTheta >= PI2);\n        var unifiedTheta = dTheta > 0 ? dTheta % PI2 : (dTheta % PI2 + PI2);\n        var large = false;\n        if (isCircle) {\n            large = true;\n        }\n        else if (isAroundZero(dThetaPositive)) {\n            large = false;\n        }\n        else {\n            large = (unifiedTheta >= PI) === !!clockwise;\n        }\n        var x0 = cx + rx * mathCos(startAngle);\n        var y0 = cy + ry * mathSin(startAngle);\n        if (this._start) {\n            this._add('M', x0, y0);\n        }\n        var xRot = Math.round(psi * degree);\n        if (isCircle) {\n            var p = 1 / this._p;\n            var dTheta_1 = (clockwise ? 1 : -1) * (PI2 - p);\n            this._add('A', rx, ry, xRot, 1, +clockwise, cx + rx * mathCos(startAngle + dTheta_1), cy + ry * mathSin(startAngle + dTheta_1));\n            if (p > 1e-2) {\n                this._add('A', rx, ry, xRot, 0, +clockwise, x0, y0);\n            }\n        }\n        else {\n            var x = cx + rx * mathCos(endAngle);\n            var y = cy + ry * mathSin(endAngle);\n            this._add('A', rx, ry, xRot, +large, +clockwise, x, y);\n        }\n    };\n    SVGPathRebuilder.prototype.rect = function (x, y, w, h) {\n        this._add('M', x, y);\n        this._add('l', w, 0);\n        this._add('l', 0, h);\n        this._add('l', -w, 0);\n        this._add('Z');\n    };\n    SVGPathRebuilder.prototype.closePath = function () {\n        if (this._d.length > 0) {\n            this._add('Z');\n        }\n    };\n    SVGPathRebuilder.prototype._add = function (cmd, a, b, c, d, e, f, g, h) {\n        var vals = [];\n        var p = this._p;\n        for (var i = 1; i < arguments.length; i++) {\n            var val = arguments[i];\n            if (isNaN(val)) {\n                this._invalid = true;\n                return;\n            }\n            vals.push(Math.round(val * p) / p);\n        }\n        this._d.push(cmd + vals.join(' '));\n        this._start = cmd === 'Z';\n    };\n    SVGPathRebuilder.prototype.generateStr = function () {\n        this._str = this._invalid ? '' : this._d.join('');\n        this._d = [];\n    };\n    SVGPathRebuilder.prototype.getStr = function () {\n        return this._str;\n    };\n    return SVGPathRebuilder;\n}());\nexport default SVGPathRebuilder;\n","import { DEFAULT_PATH_STYLE } from '../graphic/Path.js';\nimport ZRImage from '../graphic/Image.js';\nimport { getLineDash } from '../canvas/dashStyle.js';\nimport { map } from '../core/util.js';\nimport { normalizeColor } from './helper.js';\nvar NONE = 'none';\nvar mathRound = Math.round;\nfunction pathHasFill(style) {\n    var fill = style.fill;\n    return fill != null && fill !== NONE;\n}\nfunction pathHasStroke(style) {\n    var stroke = style.stroke;\n    return stroke != null && stroke !== NONE;\n}\nvar strokeProps = ['lineCap', 'miterLimit', 'lineJoin'];\nvar svgStrokeProps = map(strokeProps, function (prop) { return \"stroke-\" + prop.toLowerCase(); });\nexport default function mapStyleToAttrs(updateAttr, style, el, forceUpdate) {\n    var opacity = style.opacity == null ? 1 : style.opacity;\n    if (el instanceof ZRImage) {\n        updateAttr('opacity', opacity);\n        return;\n    }\n    if (pathHasFill(style)) {\n        var fill = normalizeColor(style.fill);\n        updateAttr('fill', fill.color);\n        var fillOpacity = style.fillOpacity != null\n            ? style.fillOpacity * fill.opacity * opacity\n            : fill.opacity * opacity;\n        if (forceUpdate || fillOpacity < 1) {\n            updateAttr('fill-opacity', fillOpacity);\n        }\n    }\n    else {\n        updateAttr('fill', NONE);\n    }\n    if (pathHasStroke(style)) {\n        var stroke = normalizeColor(style.stroke);\n        updateAttr('stroke', stroke.color);\n        var strokeScale = style.strokeNoScale\n            ? el.getLineScale()\n            : 1;\n        var strokeWidth = (strokeScale ? (style.lineWidth || 0) / strokeScale : 0);\n        var strokeOpacity = style.strokeOpacity != null\n            ? style.strokeOpacity * stroke.opacity * opacity\n            : stroke.opacity * opacity;\n        var strokeFirst = style.strokeFirst;\n        if (forceUpdate || strokeWidth !== 1) {\n            updateAttr('stroke-width', strokeWidth);\n        }\n        if (forceUpdate || strokeFirst) {\n            updateAttr('paint-order', strokeFirst ? 'stroke' : 'fill');\n        }\n        if (forceUpdate || strokeOpacity < 1) {\n            updateAttr('stroke-opacity', strokeOpacity);\n        }\n        if (style.lineDash) {\n            var _a = getLineDash(el), lineDash = _a[0], lineDashOffset = _a[1];\n            if (lineDash) {\n                lineDashOffset = mathRound(lineDashOffset || 0);\n                updateAttr('stroke-dasharray', lineDash.join(','));\n                if (lineDashOffset || forceUpdate) {\n                    updateAttr('stroke-dashoffset', lineDashOffset);\n                }\n            }\n        }\n        else if (forceUpdate) {\n            updateAttr('stroke-dasharray', NONE);\n        }\n        for (var i = 0; i < strokeProps.length; i++) {\n            var propName = strokeProps[i];\n            if (forceUpdate || style[propName] !== DEFAULT_PATH_STYLE[propName]) {\n                var val = style[propName] || DEFAULT_PATH_STYLE[propName];\n                val && updateAttr(svgStrokeProps[i], val);\n            }\n        }\n    }\n    else if (forceUpdate) {\n        updateAttr('stroke', NONE);\n    }\n}\n","import { keys, map } from '../core/util.js';\nimport { encodeHTML } from '../core/dom.js';\nexport var SVGNS = 'http://www.w3.org/2000/svg';\nexport var XLINKNS = 'http://www.w3.org/1999/xlink';\nexport var XMLNS = 'http://www.w3.org/2000/xmlns/';\nexport var XML_NAMESPACE = 'http://www.w3.org/XML/1998/namespace';\nexport var META_DATA_PREFIX = 'ecmeta_';\nexport function createElement(name) {\n    return document.createElementNS(SVGNS, name);\n}\n;\nexport function createVNode(tag, key, attrs, children, text) {\n    return {\n        tag: tag,\n        attrs: attrs || {},\n        children: children,\n        text: text,\n        key: key\n    };\n}\nfunction createElementOpen(name, attrs) {\n    var attrsStr = [];\n    if (attrs) {\n        for (var key in attrs) {\n            var val = attrs[key];\n            var part = key;\n            if (val === false) {\n                continue;\n            }\n            else if (val !== true && val != null) {\n                part += \"=\\\"\" + val + \"\\\"\";\n            }\n            attrsStr.push(part);\n        }\n    }\n    return \"<\" + name + \" \" + attrsStr.join(' ') + \">\";\n}\nfunction createElementClose(name) {\n    return \"</\" + name + \">\";\n}\nexport function vNodeToString(el, opts) {\n    opts = opts || {};\n    var S = opts.newline ? '\\n' : '';\n    function convertElToString(el) {\n        var children = el.children, tag = el.tag, attrs = el.attrs, text = el.text;\n        return createElementOpen(tag, attrs)\n            + (tag !== 'style' ? encodeHTML(text) : text || '')\n            + (children ? \"\" + S + map(children, function (child) { return convertElToString(child); }).join(S) + S : '')\n            + createElementClose(tag);\n    }\n    return convertElToString(el);\n}\nexport function getCssString(selectorNodes, animationNodes, opts) {\n    opts = opts || {};\n    var S = opts.newline ? '\\n' : '';\n    var bracketBegin = \" {\" + S;\n    var bracketEnd = S + \"}\";\n    var selectors = map(keys(selectorNodes), function (className) {\n        return className + bracketBegin + map(keys(selectorNodes[className]), function (attrName) {\n            return attrName + \":\" + selectorNodes[className][attrName] + \";\";\n        }).join(S) + bracketEnd;\n    }).join(S);\n    var animations = map(keys(animationNodes), function (animationName) {\n        return \"@keyframes \" + animationName + bracketBegin + map(keys(animationNodes[animationName]), function (percent) {\n            return percent + bracketBegin + map(keys(animationNodes[animationName][percent]), function (attrName) {\n                var val = animationNodes[animationName][percent][attrName];\n                if (attrName === 'd') {\n                    val = \"path(\\\"\" + val + \"\\\")\";\n                }\n                return attrName + \":\" + val + \";\";\n            }).join(S) + bracketEnd;\n        }).join(S) + bracketEnd;\n    }).join(S);\n    if (!selectors && !animations) {\n        return '';\n    }\n    return ['<![CDATA[', selectors, animations, ']]>'].join(S);\n}\nexport function createBrushScope(zrId) {\n    return {\n        zrId: zrId,\n        shadowCache: {},\n        patternCache: {},\n        gradientCache: {},\n        clipPathCache: {},\n        defs: {},\n        cssNodes: {},\n        cssAnims: {},\n        cssStyleCache: {},\n        cssAnimIdx: 0,\n        shadowIdx: 0,\n        gradientIdx: 0,\n        patternIdx: 0,\n        clipPathIdx: 0\n    };\n}\nexport function createSVGVNode(width, height, children, useViewBox) {\n    return createVNode('svg', 'root', {\n        'width': width,\n        'height': height,\n        'xmlns': SVGNS,\n        'xmlns:xlink': XLINKNS,\n        'version': '1.1',\n        'baseProfile': 'full',\n        'viewBox': useViewBox ? \"0 0 \" + width + \" \" + height : false\n    }, children);\n}\n","var cssClassIdx = 0;\nexport function getClassId() {\n    return cssClassIdx++;\n}\n","import { copyTransform } from '../core/Transformable.js';\nimport { createBrushScope } from './core.js';\nimport SVGPathRebuilder from './SVGPathRebuilder.js';\nimport PathProxy from '../core/PathProxy.js';\nimport { getPathPrecision, getSRTTransformString } from './helper.js';\nimport { each, extend, filter, isNumber, isString, keys } from '../core/util.js';\nimport CompoundPath from '../graphic/CompoundPath.js';\nimport { createCubicEasingFunc } from '../animation/cubicEasing.js';\nimport { getClassId } from './cssClassId.js';\nexport var EASING_MAP = {\n    cubicIn: '0.32,0,0.67,0',\n    cubicOut: '0.33,1,0.68,1',\n    cubicInOut: '0.65,0,0.35,1',\n    quadraticIn: '0.11,0,0.5,0',\n    quadraticOut: '0.5,1,0.89,1',\n    quadraticInOut: '0.45,0,0.55,1',\n    quarticIn: '0.5,0,0.75,0',\n    quarticOut: '0.25,1,0.5,1',\n    quarticInOut: '0.76,0,0.24,1',\n    quinticIn: '0.64,0,0.78,0',\n    quinticOut: '0.22,1,0.36,1',\n    quinticInOut: '0.83,0,0.17,1',\n    sinusoidalIn: '0.12,0,0.39,0',\n    sinusoidalOut: '0.61,1,0.88,1',\n    sinusoidalInOut: '0.37,0,0.63,1',\n    exponentialIn: '0.7,0,0.84,0',\n    exponentialOut: '0.16,1,0.3,1',\n    exponentialInOut: '0.87,0,0.13,1',\n    circularIn: '0.55,0,1,0.45',\n    circularOut: '0,0.55,0.45,1',\n    circularInOut: '0.85,0,0.15,1'\n};\nvar transformOriginKey = 'transform-origin';\nfunction buildPathString(el, kfShape, path) {\n    var shape = extend({}, el.shape);\n    extend(shape, kfShape);\n    el.buildPath(path, shape);\n    var svgPathBuilder = new SVGPathRebuilder();\n    svgPathBuilder.reset(getPathPrecision(el));\n    path.rebuildPath(svgPathBuilder, 1);\n    svgPathBuilder.generateStr();\n    return svgPathBuilder.getStr();\n}\nfunction setTransformOrigin(target, transform) {\n    var originX = transform.originX, originY = transform.originY;\n    if (originX || originY) {\n        target[transformOriginKey] = originX + \"px \" + originY + \"px\";\n    }\n}\nexport var ANIMATE_STYLE_MAP = {\n    fill: 'fill',\n    opacity: 'opacity',\n    lineWidth: 'stroke-width',\n    lineDashOffset: 'stroke-dashoffset'\n};\nfunction addAnimation(cssAnim, scope) {\n    var animationName = scope.zrId + '-ani-' + scope.cssAnimIdx++;\n    scope.cssAnims[animationName] = cssAnim;\n    return animationName;\n}\nfunction createCompoundPathCSSAnimation(el, attrs, scope) {\n    var paths = el.shape.paths;\n    var composedAnim = {};\n    var cssAnimationCfg;\n    var cssAnimationName;\n    each(paths, function (path) {\n        var subScope = createBrushScope(scope.zrId);\n        subScope.animation = true;\n        createCSSAnimation(path, {}, subScope, true);\n        var cssAnims = subScope.cssAnims;\n        var cssNodes = subScope.cssNodes;\n        var animNames = keys(cssAnims);\n        var len = animNames.length;\n        if (!len) {\n            return;\n        }\n        cssAnimationName = animNames[len - 1];\n        var lastAnim = cssAnims[cssAnimationName];\n        for (var percent in lastAnim) {\n            var kf = lastAnim[percent];\n            composedAnim[percent] = composedAnim[percent] || { d: '' };\n            composedAnim[percent].d += kf.d || '';\n        }\n        for (var className in cssNodes) {\n            var val = cssNodes[className].animation;\n            if (val.indexOf(cssAnimationName) >= 0) {\n                cssAnimationCfg = val;\n            }\n        }\n    });\n    if (!cssAnimationCfg) {\n        return;\n    }\n    attrs.d = false;\n    var animationName = addAnimation(composedAnim, scope);\n    return cssAnimationCfg.replace(cssAnimationName, animationName);\n}\nfunction getEasingFunc(easing) {\n    return isString(easing)\n        ? EASING_MAP[easing]\n            ? \"cubic-bezier(\" + EASING_MAP[easing] + \")\"\n            : createCubicEasingFunc(easing) ? easing : ''\n        : '';\n}\nexport function createCSSAnimation(el, attrs, scope, onlyShape) {\n    var animators = el.animators;\n    var len = animators.length;\n    var cssAnimations = [];\n    if (el instanceof CompoundPath) {\n        var animationCfg = createCompoundPathCSSAnimation(el, attrs, scope);\n        if (animationCfg) {\n            cssAnimations.push(animationCfg);\n        }\n        else if (!len) {\n            return;\n        }\n    }\n    else if (!len) {\n        return;\n    }\n    var groupAnimators = {};\n    for (var i = 0; i < len; i++) {\n        var animator = animators[i];\n        var cfgArr = [animator.getMaxTime() / 1000 + 's'];\n        var easing = getEasingFunc(animator.getClip().easing);\n        var delay = animator.getDelay();\n        if (easing) {\n            cfgArr.push(easing);\n        }\n        else {\n            cfgArr.push('linear');\n        }\n        if (delay) {\n            cfgArr.push(delay / 1000 + 's');\n        }\n        if (animator.getLoop()) {\n            cfgArr.push('infinite');\n        }\n        var cfg = cfgArr.join(' ');\n        groupAnimators[cfg] = groupAnimators[cfg] || [cfg, []];\n        groupAnimators[cfg][1].push(animator);\n    }\n    function createSingleCSSAnimation(groupAnimator) {\n        var animators = groupAnimator[1];\n        var len = animators.length;\n        var transformKfs = {};\n        var shapeKfs = {};\n        var finalKfs = {};\n        var animationTimingFunctionAttrName = 'animation-timing-function';\n        function saveAnimatorTrackToCssKfs(animator, cssKfs, toCssAttrName) {\n            var tracks = animator.getTracks();\n            var maxTime = animator.getMaxTime();\n            for (var k = 0; k < tracks.length; k++) {\n                var track = tracks[k];\n                if (track.needsAnimate()) {\n                    var kfs = track.keyframes;\n                    var attrName = track.propName;\n                    toCssAttrName && (attrName = toCssAttrName(attrName));\n                    if (attrName) {\n                        for (var i = 0; i < kfs.length; i++) {\n                            var kf = kfs[i];\n                            var percent = Math.round(kf.time / maxTime * 100) + '%';\n                            var kfEasing = getEasingFunc(kf.easing);\n                            var rawValue = kf.rawValue;\n                            if (isString(rawValue) || isNumber(rawValue)) {\n                                cssKfs[percent] = cssKfs[percent] || {};\n                                cssKfs[percent][attrName] = kf.rawValue;\n                                if (kfEasing) {\n                                    cssKfs[percent][animationTimingFunctionAttrName] = kfEasing;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        for (var i = 0; i < len; i++) {\n            var animator = animators[i];\n            var targetProp = animator.targetName;\n            if (!targetProp) {\n                !onlyShape && saveAnimatorTrackToCssKfs(animator, transformKfs);\n            }\n            else if (targetProp === 'shape') {\n                saveAnimatorTrackToCssKfs(animator, shapeKfs);\n            }\n        }\n        for (var percent in transformKfs) {\n            var transform = {};\n            copyTransform(transform, el);\n            extend(transform, transformKfs[percent]);\n            var str = getSRTTransformString(transform);\n            var timingFunction = transformKfs[percent][animationTimingFunctionAttrName];\n            finalKfs[percent] = str ? {\n                transform: str\n            } : {};\n            setTransformOrigin(finalKfs[percent], transform);\n            if (timingFunction) {\n                finalKfs[percent][animationTimingFunctionAttrName] = timingFunction;\n            }\n        }\n        ;\n        var path;\n        var canAnimateShape = true;\n        for (var percent in shapeKfs) {\n            finalKfs[percent] = finalKfs[percent] || {};\n            var isFirst = !path;\n            var timingFunction = shapeKfs[percent][animationTimingFunctionAttrName];\n            if (isFirst) {\n                path = new PathProxy();\n            }\n            var len_1 = path.len();\n            path.reset();\n            finalKfs[percent].d = buildPathString(el, shapeKfs[percent], path);\n            var newLen = path.len();\n            if (!isFirst && len_1 !== newLen) {\n                canAnimateShape = false;\n                break;\n            }\n            if (timingFunction) {\n                finalKfs[percent][animationTimingFunctionAttrName] = timingFunction;\n            }\n        }\n        ;\n        if (!canAnimateShape) {\n            for (var percent in finalKfs) {\n                delete finalKfs[percent].d;\n            }\n        }\n        if (!onlyShape) {\n            for (var i = 0; i < len; i++) {\n                var animator = animators[i];\n                var targetProp = animator.targetName;\n                if (targetProp === 'style') {\n                    saveAnimatorTrackToCssKfs(animator, finalKfs, function (propName) { return ANIMATE_STYLE_MAP[propName]; });\n                }\n            }\n        }\n        var percents = keys(finalKfs);\n        var allTransformOriginSame = true;\n        var transformOrigin;\n        for (var i = 1; i < percents.length; i++) {\n            var p0 = percents[i - 1];\n            var p1 = percents[i];\n            if (finalKfs[p0][transformOriginKey] !== finalKfs[p1][transformOriginKey]) {\n                allTransformOriginSame = false;\n                break;\n            }\n            transformOrigin = finalKfs[p0][transformOriginKey];\n        }\n        if (allTransformOriginSame && transformOrigin) {\n            for (var percent in finalKfs) {\n                if (finalKfs[percent][transformOriginKey]) {\n                    delete finalKfs[percent][transformOriginKey];\n                }\n            }\n            attrs[transformOriginKey] = transformOrigin;\n        }\n        if (filter(percents, function (percent) { return keys(finalKfs[percent]).length > 0; }).length) {\n            var animationName = addAnimation(finalKfs, scope);\n            return animationName + \" \" + groupAnimator[0] + \" both\";\n        }\n    }\n    for (var key in groupAnimators) {\n        var animationCfg = createSingleCSSAnimation(groupAnimators[key]);\n        if (animationCfg) {\n            cssAnimations.push(animationCfg);\n        }\n    }\n    if (cssAnimations.length) {\n        var className = scope.zrId + '-cls-' + getClassId();\n        scope.cssNodes['.' + className] = {\n            animation: cssAnimations.join(',')\n        };\n        attrs[\"class\"] = className;\n    }\n}\n","import { liftColor } from '../tool/color.js';\nimport { getClassId } from './cssClassId.js';\nexport function createCSSEmphasis(el, attrs, scope) {\n    if (!el.ignore) {\n        if (el.isSilent()) {\n            var style = {\n                'pointer-events': 'none'\n            };\n            setClassAttribute(style, attrs, scope, true);\n        }\n        else {\n            var emphasisStyle = el.states.emphasis && el.states.emphasis.style\n                ? el.states.emphasis.style\n                : {};\n            var fill = emphasisStyle.fill;\n            if (!fill) {\n                var normalFill = el.style && el.style.fill;\n                var selectFill = el.states.select\n                    && el.states.select.style\n                    && el.states.select.style.fill;\n                var fromFill = el.currentStates.indexOf('select') >= 0\n                    ? (selectFill || normalFill)\n                    : normalFill;\n                if (fromFill) {\n                    fill = liftColor(fromFill);\n                }\n            }\n            var lineWidth = emphasisStyle.lineWidth;\n            if (lineWidth) {\n                var scaleX = (!emphasisStyle.strokeNoScale && el.transform)\n                    ? el.transform[0]\n                    : 1;\n                lineWidth = lineWidth / scaleX;\n            }\n            var style = {\n                cursor: 'pointer'\n            };\n            if (fill) {\n                style.fill = fill;\n            }\n            if (emphasisStyle.stroke) {\n                style.stroke = emphasisStyle.stroke;\n            }\n            if (lineWidth) {\n                style['stroke-width'] = lineWidth;\n            }\n            setClassAttribute(style, attrs, scope, true);\n        }\n    }\n}\nfunction setClassAttribute(style, attrs, scope, withHover) {\n    var styleKey = JSON.stringify(style);\n    var className = scope.cssStyleCache[styleKey];\n    if (!className) {\n        className = scope.zrId + '-cls-' + getClassId();\n        scope.cssStyleCache[styleKey] = className;\n        scope.cssNodes['.' + className + (withHover ? ':hover' : '')] = style;\n    }\n    attrs[\"class\"] = attrs[\"class\"] ? (attrs[\"class\"] + ' ' + className) : className;\n}\n","import { adjustTextY, getIdURL, getMatrixStr, getPathPrecision, getShadowKey, getSRTTransformString, hasShadow, isAroundZero, isGradient, isImagePattern, isLinearGradient, isPattern, isRadialGradient, normalizeColor, round4, TEXT_ALIGN_TO_ANCHOR } from './helper.js';\nimport Path from '../graphic/Path.js';\nimport ZRImage from '../graphic/Image.js';\nimport { getLineHeight } from '../contain/text.js';\nimport TSpan from '../graphic/TSpan.js';\nimport SVGPathRebuilder from './SVGPathRebuilder.js';\nimport mapStyleToAttrs from './mapStyleToAttrs.js';\nimport { createVNode, vNodeToString, META_DATA_PREFIX } from './core.js';\nimport { assert, clone, isFunction, isString, logError, map, retrieve2 } from '../core/util.js';\nimport { createOrUpdateImage } from '../graphic/helper/image.js';\nimport { createCSSAnimation } from './cssAnimation.js';\nimport { hasSeparateFont, parseFontSize } from '../graphic/Text.js';\nimport { DEFAULT_FONT, DEFAULT_FONT_FAMILY } from '../core/platform.js';\nimport { createCSSEmphasis } from './cssEmphasis.js';\nimport { getElementSSRData } from '../zrender.js';\nvar round = Math.round;\nfunction isImageLike(val) {\n    return val && isString(val.src);\n}\nfunction isCanvasLike(val) {\n    return val && isFunction(val.toDataURL);\n}\nfunction setStyleAttrs(attrs, style, el, scope) {\n    mapStyleToAttrs(function (key, val) {\n        var isFillStroke = key === 'fill' || key === 'stroke';\n        if (isFillStroke && isGradient(val)) {\n            setGradient(style, attrs, key, scope);\n        }\n        else if (isFillStroke && isPattern(val)) {\n            setPattern(el, attrs, key, scope);\n        }\n        else if (isFillStroke && val === 'none') {\n            attrs[key] = 'transparent';\n        }\n        else {\n            attrs[key] = val;\n        }\n    }, style, el, false);\n    setShadow(el, attrs, scope);\n}\nfunction setMetaData(attrs, el) {\n    var metaData = getElementSSRData(el);\n    if (metaData) {\n        metaData.each(function (val, key) {\n            val != null && (attrs[(META_DATA_PREFIX + key).toLowerCase()] = val + '');\n        });\n        if (el.isSilent()) {\n            attrs[META_DATA_PREFIX + 'silent'] = 'true';\n        }\n    }\n}\nfunction noRotateScale(m) {\n    return isAroundZero(m[0] - 1)\n        && isAroundZero(m[1])\n        && isAroundZero(m[2])\n        && isAroundZero(m[3] - 1);\n}\nfunction noTranslate(m) {\n    return isAroundZero(m[4]) && isAroundZero(m[5]);\n}\nfunction setTransform(attrs, m, compress) {\n    if (m && !(noTranslate(m) && noRotateScale(m))) {\n        var mul = compress ? 10 : 1e4;\n        attrs.transform = noRotateScale(m)\n            ? \"translate(\" + round(m[4] * mul) / mul + \" \" + round(m[5] * mul) / mul + \")\" : getMatrixStr(m);\n    }\n}\nfunction convertPolyShape(shape, attrs, mul) {\n    var points = shape.points;\n    var strArr = [];\n    for (var i = 0; i < points.length; i++) {\n        strArr.push(round(points[i][0] * mul) / mul);\n        strArr.push(round(points[i][1] * mul) / mul);\n    }\n    attrs.points = strArr.join(' ');\n}\nfunction validatePolyShape(shape) {\n    return !shape.smooth;\n}\nfunction createAttrsConvert(desc) {\n    var normalizedDesc = map(desc, function (item) {\n        return (typeof item === 'string' ? [item, item] : item);\n    });\n    return function (shape, attrs, mul) {\n        for (var i = 0; i < normalizedDesc.length; i++) {\n            var item = normalizedDesc[i];\n            var val = shape[item[0]];\n            if (val != null) {\n                attrs[item[1]] = round(val * mul) / mul;\n            }\n        }\n    };\n}\nvar builtinShapesDef = {\n    circle: [createAttrsConvert(['cx', 'cy', 'r'])],\n    polyline: [convertPolyShape, validatePolyShape],\n    polygon: [convertPolyShape, validatePolyShape]\n};\nfunction hasShapeAnimation(el) {\n    var animators = el.animators;\n    for (var i = 0; i < animators.length; i++) {\n        if (animators[i].targetName === 'shape') {\n            return true;\n        }\n    }\n    return false;\n}\nexport function brushSVGPath(el, scope) {\n    var style = el.style;\n    var shape = el.shape;\n    var builtinShpDef = builtinShapesDef[el.type];\n    var attrs = {};\n    var needsAnimate = scope.animation;\n    var svgElType = 'path';\n    var strokePercent = el.style.strokePercent;\n    var precision = (scope.compress && getPathPrecision(el)) || 4;\n    if (builtinShpDef\n        && !scope.willUpdate\n        && !(builtinShpDef[1] && !builtinShpDef[1](shape))\n        && !(needsAnimate && hasShapeAnimation(el))\n        && !(strokePercent < 1)) {\n        svgElType = el.type;\n        var mul = Math.pow(10, precision);\n        builtinShpDef[0](shape, attrs, mul);\n    }\n    else {\n        var needBuildPath = !el.path || el.shapeChanged();\n        if (!el.path) {\n            el.createPathProxy();\n        }\n        var path = el.path;\n        if (needBuildPath) {\n            path.beginPath();\n            el.buildPath(path, el.shape);\n            el.pathUpdated();\n        }\n        var pathVersion = path.getVersion();\n        var elExt = el;\n        var svgPathBuilder = elExt.__svgPathBuilder;\n        if (elExt.__svgPathVersion !== pathVersion\n            || !svgPathBuilder\n            || strokePercent !== elExt.__svgPathStrokePercent) {\n            if (!svgPathBuilder) {\n                svgPathBuilder = elExt.__svgPathBuilder = new SVGPathRebuilder();\n            }\n            svgPathBuilder.reset(precision);\n            path.rebuildPath(svgPathBuilder, strokePercent);\n            svgPathBuilder.generateStr();\n            elExt.__svgPathVersion = pathVersion;\n            elExt.__svgPathStrokePercent = strokePercent;\n        }\n        attrs.d = svgPathBuilder.getStr();\n    }\n    setTransform(attrs, el.transform);\n    setStyleAttrs(attrs, style, el, scope);\n    setMetaData(attrs, el);\n    scope.animation && createCSSAnimation(el, attrs, scope);\n    scope.emphasis && createCSSEmphasis(el, attrs, scope);\n    return createVNode(svgElType, el.id + '', attrs);\n}\nexport function brushSVGImage(el, scope) {\n    var style = el.style;\n    var image = style.image;\n    if (image && !isString(image)) {\n        if (isImageLike(image)) {\n            image = image.src;\n        }\n        else if (isCanvasLike(image)) {\n            image = image.toDataURL();\n        }\n    }\n    if (!image) {\n        return;\n    }\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var dw = style.width;\n    var dh = style.height;\n    var attrs = {\n        href: image,\n        width: dw,\n        height: dh\n    };\n    if (x) {\n        attrs.x = x;\n    }\n    if (y) {\n        attrs.y = y;\n    }\n    setTransform(attrs, el.transform);\n    setStyleAttrs(attrs, style, el, scope);\n    setMetaData(attrs, el);\n    scope.animation && createCSSAnimation(el, attrs, scope);\n    return createVNode('image', el.id + '', attrs);\n}\n;\nexport function brushSVGTSpan(el, scope) {\n    var style = el.style;\n    var text = style.text;\n    text != null && (text += '');\n    if (!text || isNaN(style.x) || isNaN(style.y)) {\n        return;\n    }\n    var font = style.font || DEFAULT_FONT;\n    var x = style.x || 0;\n    var y = adjustTextY(style.y || 0, getLineHeight(font), style.textBaseline);\n    var textAlign = TEXT_ALIGN_TO_ANCHOR[style.textAlign]\n        || style.textAlign;\n    var attrs = {\n        'dominant-baseline': 'central',\n        'text-anchor': textAlign\n    };\n    if (hasSeparateFont(style)) {\n        var separatedFontStr = '';\n        var fontStyle = style.fontStyle;\n        var fontSize = parseFontSize(style.fontSize);\n        if (!parseFloat(fontSize)) {\n            return;\n        }\n        var fontFamily = style.fontFamily || DEFAULT_FONT_FAMILY;\n        var fontWeight = style.fontWeight;\n        separatedFontStr += \"font-size:\" + fontSize + \";font-family:\" + fontFamily + \";\";\n        if (fontStyle && fontStyle !== 'normal') {\n            separatedFontStr += \"font-style:\" + fontStyle + \";\";\n        }\n        if (fontWeight && fontWeight !== 'normal') {\n            separatedFontStr += \"font-weight:\" + fontWeight + \";\";\n        }\n        attrs.style = separatedFontStr;\n    }\n    else {\n        attrs.style = \"font: \" + font;\n    }\n    if (text.match(/\\s/)) {\n        attrs['xml:space'] = 'preserve';\n    }\n    if (x) {\n        attrs.x = x;\n    }\n    if (y) {\n        attrs.y = y;\n    }\n    setTransform(attrs, el.transform);\n    setStyleAttrs(attrs, style, el, scope);\n    setMetaData(attrs, el);\n    scope.animation && createCSSAnimation(el, attrs, scope);\n    return createVNode('text', el.id + '', attrs, undefined, text);\n}\nexport function brush(el, scope) {\n    if (el instanceof Path) {\n        return brushSVGPath(el, scope);\n    }\n    else if (el instanceof ZRImage) {\n        return brushSVGImage(el, scope);\n    }\n    else if (el instanceof TSpan) {\n        return brushSVGTSpan(el, scope);\n    }\n}\nfunction setShadow(el, attrs, scope) {\n    var style = el.style;\n    if (hasShadow(style)) {\n        var shadowKey = getShadowKey(el);\n        var shadowCache = scope.shadowCache;\n        var shadowId = shadowCache[shadowKey];\n        if (!shadowId) {\n            var globalScale = el.getGlobalScale();\n            var scaleX = globalScale[0];\n            var scaleY = globalScale[1];\n            if (!scaleX || !scaleY) {\n                return;\n            }\n            var offsetX = style.shadowOffsetX || 0;\n            var offsetY = style.shadowOffsetY || 0;\n            var blur_1 = style.shadowBlur;\n            var _a = normalizeColor(style.shadowColor), opacity = _a.opacity, color = _a.color;\n            var stdDx = blur_1 / 2 / scaleX;\n            var stdDy = blur_1 / 2 / scaleY;\n            var stdDeviation = stdDx + ' ' + stdDy;\n            shadowId = scope.zrId + '-s' + scope.shadowIdx++;\n            scope.defs[shadowId] = createVNode('filter', shadowId, {\n                'id': shadowId,\n                'x': '-100%',\n                'y': '-100%',\n                'width': '300%',\n                'height': '300%'\n            }, [\n                createVNode('feDropShadow', '', {\n                    'dx': offsetX / scaleX,\n                    'dy': offsetY / scaleY,\n                    'stdDeviation': stdDeviation,\n                    'flood-color': color,\n                    'flood-opacity': opacity\n                })\n            ]);\n            shadowCache[shadowKey] = shadowId;\n        }\n        attrs.filter = getIdURL(shadowId);\n    }\n}\nexport function setGradient(style, attrs, target, scope) {\n    var val = style[target];\n    var gradientTag;\n    var gradientAttrs = {\n        'gradientUnits': val.global\n            ? 'userSpaceOnUse'\n            : 'objectBoundingBox'\n    };\n    if (isLinearGradient(val)) {\n        gradientTag = 'linearGradient';\n        gradientAttrs.x1 = val.x;\n        gradientAttrs.y1 = val.y;\n        gradientAttrs.x2 = val.x2;\n        gradientAttrs.y2 = val.y2;\n    }\n    else if (isRadialGradient(val)) {\n        gradientTag = 'radialGradient';\n        gradientAttrs.cx = retrieve2(val.x, 0.5);\n        gradientAttrs.cy = retrieve2(val.y, 0.5);\n        gradientAttrs.r = retrieve2(val.r, 0.5);\n    }\n    else {\n        if (process.env.NODE_ENV !== 'production') {\n            logError('Illegal gradient type.');\n        }\n        return;\n    }\n    var colors = val.colorStops;\n    var colorStops = [];\n    for (var i = 0, len = colors.length; i < len; ++i) {\n        var offset = round4(colors[i].offset) * 100 + '%';\n        var stopColor = colors[i].color;\n        var _a = normalizeColor(stopColor), color = _a.color, opacity = _a.opacity;\n        var stopsAttrs = {\n            'offset': offset\n        };\n        stopsAttrs['stop-color'] = color;\n        if (opacity < 1) {\n            stopsAttrs['stop-opacity'] = opacity;\n        }\n        colorStops.push(createVNode('stop', i + '', stopsAttrs));\n    }\n    var gradientVNode = createVNode(gradientTag, '', gradientAttrs, colorStops);\n    var gradientKey = vNodeToString(gradientVNode);\n    var gradientCache = scope.gradientCache;\n    var gradientId = gradientCache[gradientKey];\n    if (!gradientId) {\n        gradientId = scope.zrId + '-g' + scope.gradientIdx++;\n        gradientCache[gradientKey] = gradientId;\n        gradientAttrs.id = gradientId;\n        scope.defs[gradientId] = createVNode(gradientTag, gradientId, gradientAttrs, colorStops);\n    }\n    attrs[target] = getIdURL(gradientId);\n}\nexport function setPattern(el, attrs, target, scope) {\n    var val = el.style[target];\n    var boundingRect = el.getBoundingRect();\n    var patternAttrs = {};\n    var repeat = val.repeat;\n    var noRepeat = repeat === 'no-repeat';\n    var repeatX = repeat === 'repeat-x';\n    var repeatY = repeat === 'repeat-y';\n    var child;\n    if (isImagePattern(val)) {\n        var imageWidth_1 = val.imageWidth;\n        var imageHeight_1 = val.imageHeight;\n        var imageSrc = void 0;\n        var patternImage = val.image;\n        if (isString(patternImage)) {\n            imageSrc = patternImage;\n        }\n        else if (isImageLike(patternImage)) {\n            imageSrc = patternImage.src;\n        }\n        else if (isCanvasLike(patternImage)) {\n            imageSrc = patternImage.toDataURL();\n        }\n        if (typeof Image === 'undefined') {\n            var errMsg = 'Image width/height must been given explictly in svg-ssr renderer.';\n            assert(imageWidth_1, errMsg);\n            assert(imageHeight_1, errMsg);\n        }\n        else if (imageWidth_1 == null || imageHeight_1 == null) {\n            var setSizeToVNode_1 = function (vNode, img) {\n                if (vNode) {\n                    var svgEl = vNode.elm;\n                    var width = imageWidth_1 || img.width;\n                    var height = imageHeight_1 || img.height;\n                    if (vNode.tag === 'pattern') {\n                        if (repeatX) {\n                            height = 1;\n                            width /= boundingRect.width;\n                        }\n                        else if (repeatY) {\n                            width = 1;\n                            height /= boundingRect.height;\n                        }\n                    }\n                    vNode.attrs.width = width;\n                    vNode.attrs.height = height;\n                    if (svgEl) {\n                        svgEl.setAttribute('width', width);\n                        svgEl.setAttribute('height', height);\n                    }\n                }\n            };\n            var createdImage = createOrUpdateImage(imageSrc, null, el, function (img) {\n                noRepeat || setSizeToVNode_1(patternVNode, img);\n                setSizeToVNode_1(child, img);\n            });\n            if (createdImage && createdImage.width && createdImage.height) {\n                imageWidth_1 = imageWidth_1 || createdImage.width;\n                imageHeight_1 = imageHeight_1 || createdImage.height;\n            }\n        }\n        child = createVNode('image', 'img', {\n            href: imageSrc,\n            width: imageWidth_1,\n            height: imageHeight_1\n        });\n        patternAttrs.width = imageWidth_1;\n        patternAttrs.height = imageHeight_1;\n    }\n    else if (val.svgElement) {\n        child = clone(val.svgElement);\n        patternAttrs.width = val.svgWidth;\n        patternAttrs.height = val.svgHeight;\n    }\n    if (!child) {\n        return;\n    }\n    var patternWidth;\n    var patternHeight;\n    if (noRepeat) {\n        patternWidth = patternHeight = 1;\n    }\n    else if (repeatX) {\n        patternHeight = 1;\n        patternWidth = patternAttrs.width / boundingRect.width;\n    }\n    else if (repeatY) {\n        patternWidth = 1;\n        patternHeight = patternAttrs.height / boundingRect.height;\n    }\n    else {\n        patternAttrs.patternUnits = 'userSpaceOnUse';\n    }\n    if (patternWidth != null && !isNaN(patternWidth)) {\n        patternAttrs.width = patternWidth;\n    }\n    if (patternHeight != null && !isNaN(patternHeight)) {\n        patternAttrs.height = patternHeight;\n    }\n    var patternTransform = getSRTTransformString(val);\n    patternTransform && (patternAttrs.patternTransform = patternTransform);\n    var patternVNode = createVNode('pattern', '', patternAttrs, [child]);\n    var patternKey = vNodeToString(patternVNode);\n    var patternCache = scope.patternCache;\n    var patternId = patternCache[patternKey];\n    if (!patternId) {\n        patternId = scope.zrId + '-p' + scope.patternIdx++;\n        patternCache[patternKey] = patternId;\n        patternAttrs.id = patternId;\n        patternVNode = scope.defs[patternId] = createVNode('pattern', patternId, patternAttrs, [child]);\n    }\n    attrs[target] = getIdURL(patternId);\n}\nexport function setClipPath(clipPath, attrs, scope) {\n    var clipPathCache = scope.clipPathCache, defs = scope.defs;\n    var clipPathId = clipPathCache[clipPath.id];\n    if (!clipPathId) {\n        clipPathId = scope.zrId + '-c' + scope.clipPathIdx++;\n        var clipPathAttrs = {\n            id: clipPathId\n        };\n        clipPathCache[clipPath.id] = clipPathId;\n        defs[clipPathId] = createVNode('clipPath', clipPathId, clipPathAttrs, [brushSVGPath(clipPath, scope)]);\n    }\n    attrs['clip-path'] = getIdURL(clipPathId);\n}\n","export function createTextNode(text) {\n    return document.createTextNode(text);\n}\nexport function createComment(text) {\n    return document.createComment(text);\n}\nexport function insertBefore(parentNode, newNode, referenceNode) {\n    parentNode.insertBefore(newNode, referenceNode);\n}\nexport function removeChild(node, child) {\n    node.removeChild(child);\n}\nexport function appendChild(node, child) {\n    node.appendChild(child);\n}\nexport function parentNode(node) {\n    return node.parentNode;\n}\nexport function nextSibling(node) {\n    return node.nextSibling;\n}\nexport function tagName(elm) {\n    return elm.tagName;\n}\nexport function setTextContent(node, text) {\n    node.textContent = text;\n}\nexport function getTextContent(node) {\n    return node.textContent;\n}\nexport function isElement(node) {\n    return node.nodeType === 1;\n}\nexport function isText(node) {\n    return node.nodeType === 3;\n}\nexport function isComment(node) {\n    return node.nodeType === 8;\n}\n","import { isArray, isObject } from '../core/util.js';\nimport { createElement, createVNode, XMLNS, XML_NAMESPACE, XLINKNS } from './core.js';\nimport * as api from './domapi.js';\nvar colonChar = 58;\nvar xChar = 120;\nvar emptyNode = createVNode('', '');\nfunction isUndef(s) {\n    return s === undefined;\n}\nfunction isDef(s) {\n    return s !== undefined;\n}\nfunction createKeyToOldIdx(children, beginIdx, endIdx) {\n    var map = {};\n    for (var i = beginIdx; i <= endIdx; ++i) {\n        var key = children[i].key;\n        if (key !== undefined) {\n            if (process.env.NODE_ENV !== 'production') {\n                if (map[key] != null) {\n                    console.error(\"Duplicate key \" + key);\n                }\n            }\n            map[key] = i;\n        }\n    }\n    return map;\n}\nfunction sameVnode(vnode1, vnode2) {\n    var isSameKey = vnode1.key === vnode2.key;\n    var isSameTag = vnode1.tag === vnode2.tag;\n    return isSameTag && isSameKey;\n}\nfunction createElm(vnode) {\n    var i;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n        var elm = (vnode.elm = createElement(tag));\n        updateAttrs(emptyNode, vnode);\n        if (isArray(children)) {\n            for (i = 0; i < children.length; ++i) {\n                var ch = children[i];\n                if (ch != null) {\n                    api.appendChild(elm, createElm(ch));\n                }\n            }\n        }\n        else if (isDef(vnode.text) && !isObject(vnode.text)) {\n            api.appendChild(elm, api.createTextNode(vnode.text));\n        }\n    }\n    else {\n        vnode.elm = api.createTextNode(vnode.text);\n    }\n    return vnode.elm;\n}\nfunction addVnodes(parentElm, before, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n        var ch = vnodes[startIdx];\n        if (ch != null) {\n            api.insertBefore(parentElm, createElm(ch), before);\n        }\n    }\n}\nfunction removeVnodes(parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n        var ch = vnodes[startIdx];\n        if (ch != null) {\n            if (isDef(ch.tag)) {\n                var parent_1 = api.parentNode(ch.elm);\n                api.removeChild(parent_1, ch.elm);\n            }\n            else {\n                api.removeChild(parentElm, ch.elm);\n            }\n        }\n    }\n}\nexport function updateAttrs(oldVnode, vnode) {\n    var key;\n    var elm = vnode.elm;\n    var oldAttrs = oldVnode && oldVnode.attrs || {};\n    var attrs = vnode.attrs || {};\n    if (oldAttrs === attrs) {\n        return;\n    }\n    for (key in attrs) {\n        var cur = attrs[key];\n        var old = oldAttrs[key];\n        if (old !== cur) {\n            if (cur === true) {\n                elm.setAttribute(key, '');\n            }\n            else if (cur === false) {\n                elm.removeAttribute(key);\n            }\n            else {\n                if (key === 'style') {\n                    elm.style.cssText = cur;\n                }\n                else if (key.charCodeAt(0) !== xChar) {\n                    elm.setAttribute(key, cur);\n                }\n                else if (key === 'xmlns:xlink' || key === 'xmlns') {\n                    elm.setAttributeNS(XMLNS, key, cur);\n                }\n                else if (key.charCodeAt(3) === colonChar) {\n                    elm.setAttributeNS(XML_NAMESPACE, key, cur);\n                }\n                else if (key.charCodeAt(5) === colonChar) {\n                    elm.setAttributeNS(XLINKNS, key, cur);\n                }\n                else {\n                    elm.setAttribute(key, cur);\n                }\n            }\n        }\n    }\n    for (key in oldAttrs) {\n        if (!(key in attrs)) {\n            elm.removeAttribute(key);\n        }\n    }\n}\nfunction updateChildren(parentElm, oldCh, newCh) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx;\n    var idxInOld;\n    var elmToMove;\n    var before;\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n        if (oldStartVnode == null) {\n            oldStartVnode = oldCh[++oldStartIdx];\n        }\n        else if (oldEndVnode == null) {\n            oldEndVnode = oldCh[--oldEndIdx];\n        }\n        else if (newStartVnode == null) {\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else if (newEndVnode == null) {\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (sameVnode(oldStartVnode, newStartVnode)) {\n            patchVnode(oldStartVnode, newStartVnode);\n            oldStartVnode = oldCh[++oldStartIdx];\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else if (sameVnode(oldEndVnode, newEndVnode)) {\n            patchVnode(oldEndVnode, newEndVnode);\n            oldEndVnode = oldCh[--oldEndIdx];\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (sameVnode(oldStartVnode, newEndVnode)) {\n            patchVnode(oldStartVnode, newEndVnode);\n            api.insertBefore(parentElm, oldStartVnode.elm, api.nextSibling(oldEndVnode.elm));\n            oldStartVnode = oldCh[++oldStartIdx];\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (sameVnode(oldEndVnode, newStartVnode)) {\n            patchVnode(oldEndVnode, newStartVnode);\n            api.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n            oldEndVnode = oldCh[--oldEndIdx];\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else {\n            if (isUndef(oldKeyToIdx)) {\n                oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx);\n            }\n            idxInOld = oldKeyToIdx[newStartVnode.key];\n            if (isUndef(idxInOld)) {\n                api.insertBefore(parentElm, createElm(newStartVnode), oldStartVnode.elm);\n            }\n            else {\n                elmToMove = oldCh[idxInOld];\n                if (elmToMove.tag !== newStartVnode.tag) {\n                    api.insertBefore(parentElm, createElm(newStartVnode), oldStartVnode.elm);\n                }\n                else {\n                    patchVnode(elmToMove, newStartVnode);\n                    oldCh[idxInOld] = undefined;\n                    api.insertBefore(parentElm, elmToMove.elm, oldStartVnode.elm);\n                }\n            }\n            newStartVnode = newCh[++newStartIdx];\n        }\n    }\n    if (oldStartIdx <= oldEndIdx || newStartIdx <= newEndIdx) {\n        if (oldStartIdx > oldEndIdx) {\n            before = newCh[newEndIdx + 1] == null ? null : newCh[newEndIdx + 1].elm;\n            addVnodes(parentElm, before, newCh, newStartIdx, newEndIdx);\n        }\n        else {\n            removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n        }\n    }\n}\nfunction patchVnode(oldVnode, vnode) {\n    var elm = (vnode.elm = oldVnode.elm);\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (oldVnode === vnode) {\n        return;\n    }\n    updateAttrs(oldVnode, vnode);\n    if (isUndef(vnode.text)) {\n        if (isDef(oldCh) && isDef(ch)) {\n            if (oldCh !== ch) {\n                updateChildren(elm, oldCh, ch);\n            }\n        }\n        else if (isDef(ch)) {\n            if (isDef(oldVnode.text)) {\n                api.setTextContent(elm, '');\n            }\n            addVnodes(elm, null, ch, 0, ch.length - 1);\n        }\n        else if (isDef(oldCh)) {\n            removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n        }\n        else if (isDef(oldVnode.text)) {\n            api.setTextContent(elm, '');\n        }\n    }\n    else if (oldVnode.text !== vnode.text) {\n        if (isDef(oldCh)) {\n            removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n        }\n        api.setTextContent(elm, vnode.text);\n    }\n}\nexport default function patch(oldVnode, vnode) {\n    if (sameVnode(oldVnode, vnode)) {\n        patchVnode(oldVnode, vnode);\n    }\n    else {\n        var elm = oldVnode.elm;\n        var parent_2 = api.parentNode(elm);\n        createElm(vnode);\n        if (parent_2 !== null) {\n            api.insertBefore(parent_2, vnode.elm, api.nextSibling(elm));\n            removeVnodes(parent_2, [oldVnode], 0, 0);\n        }\n    }\n    return vnode;\n}\n","import { brush, setClipPath, setGradient, setPattern } from './graphic.js';\nimport { createElement, createVNode, vNodeToString, getCssString, createBrushScope, createSVGVNode } from './core.js';\nimport { normalizeColor, encodeBase64, isGradient, isPattern } from './helper.js';\nimport { extend, keys, logError, map, noop, retrieve2 } from '../core/util.js';\nimport patch, { updateAttrs } from './patch.js';\nimport { getSize } from '../canvas/helper.js';\nvar svgId = 0;\nvar SVGPainter = (function () {\n    function SVGPainter(root, storage, opts) {\n        this.type = 'svg';\n        this.refreshHover = createMethodNotSupport('refreshHover');\n        this.configLayer = createMethodNotSupport('configLayer');\n        this.storage = storage;\n        this._opts = opts = extend({}, opts);\n        this.root = root;\n        this._id = 'zr' + svgId++;\n        this._oldVNode = createSVGVNode(opts.width, opts.height);\n        if (root && !opts.ssr) {\n            var viewport = this._viewport = document.createElement('div');\n            viewport.style.cssText = 'position:relative;overflow:hidden';\n            var svgDom = this._svgDom = this._oldVNode.elm = createElement('svg');\n            updateAttrs(null, this._oldVNode);\n            viewport.appendChild(svgDom);\n            root.appendChild(viewport);\n        }\n        this.resize(opts.width, opts.height);\n    }\n    SVGPainter.prototype.getType = function () {\n        return this.type;\n    };\n    SVGPainter.prototype.getViewportRoot = function () {\n        return this._viewport;\n    };\n    SVGPainter.prototype.getViewportRootOffset = function () {\n        var viewportRoot = this.getViewportRoot();\n        if (viewportRoot) {\n            return {\n                offsetLeft: viewportRoot.offsetLeft || 0,\n                offsetTop: viewportRoot.offsetTop || 0\n            };\n        }\n    };\n    SVGPainter.prototype.getSvgDom = function () {\n        return this._svgDom;\n    };\n    SVGPainter.prototype.refresh = function () {\n        if (this.root) {\n            var vnode = this.renderToVNode({\n                willUpdate: true\n            });\n            vnode.attrs.style = 'position:absolute;left:0;top:0;user-select:none';\n            patch(this._oldVNode, vnode);\n            this._oldVNode = vnode;\n        }\n    };\n    SVGPainter.prototype.renderOneToVNode = function (el) {\n        return brush(el, createBrushScope(this._id));\n    };\n    SVGPainter.prototype.renderToVNode = function (opts) {\n        opts = opts || {};\n        var list = this.storage.getDisplayList(true);\n        var width = this._width;\n        var height = this._height;\n        var scope = createBrushScope(this._id);\n        scope.animation = opts.animation;\n        scope.willUpdate = opts.willUpdate;\n        scope.compress = opts.compress;\n        scope.emphasis = opts.emphasis;\n        var children = [];\n        var bgVNode = this._bgVNode = createBackgroundVNode(width, height, this._backgroundColor, scope);\n        bgVNode && children.push(bgVNode);\n        var mainVNode = !opts.compress\n            ? (this._mainVNode = createVNode('g', 'main', {}, [])) : null;\n        this._paintList(list, scope, mainVNode ? mainVNode.children : children);\n        mainVNode && children.push(mainVNode);\n        var defs = map(keys(scope.defs), function (id) { return scope.defs[id]; });\n        if (defs.length) {\n            children.push(createVNode('defs', 'defs', {}, defs));\n        }\n        if (opts.animation) {\n            var animationCssStr = getCssString(scope.cssNodes, scope.cssAnims, { newline: true });\n            if (animationCssStr) {\n                var styleNode = createVNode('style', 'stl', {}, [], animationCssStr);\n                children.push(styleNode);\n            }\n        }\n        return createSVGVNode(width, height, children, opts.useViewBox);\n    };\n    SVGPainter.prototype.renderToString = function (opts) {\n        opts = opts || {};\n        return vNodeToString(this.renderToVNode({\n            animation: retrieve2(opts.cssAnimation, true),\n            emphasis: retrieve2(opts.cssEmphasis, true),\n            willUpdate: false,\n            compress: true,\n            useViewBox: retrieve2(opts.useViewBox, true)\n        }), { newline: true });\n    };\n    SVGPainter.prototype.setBackgroundColor = function (backgroundColor) {\n        this._backgroundColor = backgroundColor;\n    };\n    SVGPainter.prototype.getSvgRoot = function () {\n        return this._mainVNode && this._mainVNode.elm;\n    };\n    SVGPainter.prototype._paintList = function (list, scope, out) {\n        var listLen = list.length;\n        var clipPathsGroupsStack = [];\n        var clipPathsGroupsStackDepth = 0;\n        var currentClipPathGroup;\n        var prevClipPaths;\n        var clipGroupNodeIdx = 0;\n        for (var i = 0; i < listLen; i++) {\n            var displayable = list[i];\n            if (!displayable.invisible) {\n                var clipPaths = displayable.__clipPaths;\n                var len = clipPaths && clipPaths.length || 0;\n                var prevLen = prevClipPaths && prevClipPaths.length || 0;\n                var lca = void 0;\n                for (lca = Math.max(len - 1, prevLen - 1); lca >= 0; lca--) {\n                    if (clipPaths && prevClipPaths\n                        && clipPaths[lca] === prevClipPaths[lca]) {\n                        break;\n                    }\n                }\n                for (var i_1 = prevLen - 1; i_1 > lca; i_1--) {\n                    clipPathsGroupsStackDepth--;\n                    currentClipPathGroup = clipPathsGroupsStack[clipPathsGroupsStackDepth - 1];\n                }\n                for (var i_2 = lca + 1; i_2 < len; i_2++) {\n                    var groupAttrs = {};\n                    setClipPath(clipPaths[i_2], groupAttrs, scope);\n                    var g = createVNode('g', 'clip-g-' + clipGroupNodeIdx++, groupAttrs, []);\n                    (currentClipPathGroup ? currentClipPathGroup.children : out).push(g);\n                    clipPathsGroupsStack[clipPathsGroupsStackDepth++] = g;\n                    currentClipPathGroup = g;\n                }\n                prevClipPaths = clipPaths;\n                var ret = brush(displayable, scope);\n                if (ret) {\n                    (currentClipPathGroup ? currentClipPathGroup.children : out).push(ret);\n                }\n            }\n        }\n    };\n    SVGPainter.prototype.resize = function (width, height) {\n        var opts = this._opts;\n        var root = this.root;\n        var viewport = this._viewport;\n        width != null && (opts.width = width);\n        height != null && (opts.height = height);\n        if (root && viewport) {\n            viewport.style.display = 'none';\n            width = getSize(root, 0, opts);\n            height = getSize(root, 1, opts);\n            viewport.style.display = '';\n        }\n        if (this._width !== width || this._height !== height) {\n            this._width = width;\n            this._height = height;\n            if (viewport) {\n                var viewportStyle = viewport.style;\n                viewportStyle.width = width + 'px';\n                viewportStyle.height = height + 'px';\n            }\n            if (!isPattern(this._backgroundColor)) {\n                var svgDom = this._svgDom;\n                if (svgDom) {\n                    svgDom.setAttribute('width', width);\n                    svgDom.setAttribute('height', height);\n                }\n                var bgEl = this._bgVNode && this._bgVNode.elm;\n                if (bgEl) {\n                    bgEl.setAttribute('width', width);\n                    bgEl.setAttribute('height', height);\n                }\n            }\n            else {\n                this.refresh();\n            }\n        }\n    };\n    SVGPainter.prototype.getWidth = function () {\n        return this._width;\n    };\n    SVGPainter.prototype.getHeight = function () {\n        return this._height;\n    };\n    SVGPainter.prototype.dispose = function () {\n        if (this.root) {\n            this.root.innerHTML = '';\n        }\n        this._svgDom =\n            this._viewport =\n                this.storage =\n                    this._oldVNode =\n                        this._bgVNode =\n                            this._mainVNode = null;\n    };\n    SVGPainter.prototype.clear = function () {\n        if (this._svgDom) {\n            this._svgDom.innerHTML = null;\n        }\n        this._oldVNode = null;\n    };\n    SVGPainter.prototype.toDataURL = function (base64) {\n        var str = this.renderToString();\n        var prefix = 'data:image/svg+xml;';\n        if (base64) {\n            str = encodeBase64(str);\n            return str && prefix + 'base64,' + str;\n        }\n        return prefix + 'charset=UTF-8,' + encodeURIComponent(str);\n    };\n    return SVGPainter;\n}());\nfunction createMethodNotSupport(method) {\n    return function () {\n        if (process.env.NODE_ENV !== 'production') {\n            logError('In SVG mode painter not support method \"' + method + '\"');\n        }\n    };\n}\nfunction createBackgroundVNode(width, height, backgroundColor, scope) {\n    var bgVNode;\n    if (backgroundColor && backgroundColor !== 'none') {\n        bgVNode = createVNode('rect', 'bg', {\n            width: width,\n            height: height,\n            x: '0',\n            y: '0'\n        });\n        if (isGradient(backgroundColor)) {\n            setGradient({ fill: backgroundColor }, bgVNode.attrs, 'fill', scope);\n        }\n        else if (isPattern(backgroundColor)) {\n            setPattern({\n                style: {\n                    fill: backgroundColor\n                },\n                dirty: noop,\n                getBoundingRect: function () { return ({ width: width, height: height }); }\n            }, bgVNode.attrs, 'fill', scope);\n        }\n        else {\n            var _a = normalizeColor(backgroundColor), color = _a.color, opacity = _a.opacity;\n            bgVNode.attrs.fill = color;\n            opacity < 1 && (bgVNode.attrs['fill-opacity'] = opacity);\n        }\n    }\n    return bgVNode;\n}\nexport default SVGPainter;\n","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport SVGPainter from 'zrender/lib/svg/Painter.js';\nexport function install(registers) {\n  registers.registerPainter('svg', SVGPainter);\n}"],"names":["mathSin","Math","sin","mathCos","cos","PI","PI2","degree","SVGPathRebuilder","prototype","reset","precision","this","_start","_d","_str","_p","pow","moveTo","x","y","_add","lineTo","bezierCurveTo","x2","y2","x3","y3","quadraticCurveTo","arc","cx","cy","r","startAngle","endAngle","anticlockwise","ellipse","rx","ry","psi","dTheta","clockwise","dThetaPositive","abs","isCircle","isAroundZero","unifiedTheta","large","x0","y0","xRot","round","p","dTheta_1","rect","w","h","closePath","length","cmd","a","b","c","d","e","f","g","vals","i","arguments","val","isNaN","_invalid","push","join","generateStr","getStr","NONE","mathRound","strokeProps","svgStrokeProps","map","prop","toLowerCase","mapStyleToAttrs","updateAttr","style","el","forceUpdate","opacity","ZRImage","fill","pathHasFill","normalizeColor","color","fillOpacity","stroke","pathHasStroke","strokeScale","strokeNoScale","getLineScale","strokeWidth","lineWidth","strokeOpacity","strokeFirst","lineDash","_a","getLineDash","lineDashOffset","propName","DEFAULT_PATH_STYLE","SVGNS","XLINKNS","XMLNS","XML_NAMESPACE","META_DATA_PREFIX","createElement","name","document","createElementNS","createVNode","tag","key","attrs","children","text","vNodeToString","opts","S","newline","convertElToString","attrsStr","part","createElementOpen","encodeHTML","child","createBrushScope","zrId","shadowCache","patternCache","gradientCache","clipPathCache","defs","cssNodes","cssAnims","cssStyleCache","cssAnimIdx","shadowIdx","gradientIdx","patternIdx","clipPathIdx","createSVGVNode","width","height","useViewBox","cssClassIdx","getClassId","EASING_MAP","cubicIn","cubicOut","cubicInOut","quadraticIn","quadraticOut","quadraticInOut","quarticIn","quarticOut","quarticInOut","quinticIn","quinticOut","quinticInOut","sinusoidalIn","sinusoidalOut","sinusoidalInOut","exponentialIn","exponentialOut","exponentialInOut","circularIn","circularOut","circularInOut","transformOriginKey","buildPathString","kfShape","path","shape","extend","buildPath","svgPathBuilder","getPathPrecision","rebuildPath","setTransformOrigin","target","transform","originX","originY","ANIMATE_STYLE_MAP","addAnimation","cssAnim","scope","animationName","getEasingFunc","easing","isString","createCubicEasingFunc","createCSSAnimation","onlyShape","animators","len","cssAnimations","CompoundPath","animationCfg","cssAnimationCfg","cssAnimationName","paths","composedAnim","each","subScope","animation","animNames","keys","lastAnim","percent","kf","className","indexOf","replace","createCompoundPathCSSAnimation","groupAnimators","animator","cfgArr","getMaxTime","getClip","delay","getDelay","getLoop","cfg","createSingleCSSAnimation","groupAnimator","transformKfs","shapeKfs","finalKfs","animationTimingFunctionAttrName","saveAnimatorTrackToCssKfs","cssKfs","toCssAttrName","tracks","getTracks","maxTime","k","track","needsAnimate","kfs","keyframes","attrName","time","kfEasing","rawValue","isNumber","targetProp","targetName","copyTransform","str","getSRTTransformString","timingFunction","canAnimateShape","isFirst","PathProxy","len_1","newLen","transformOrigin","percents","allTransformOriginSame","p0","p1","filter","setClassAttribute","withHover","styleKey","JSON","stringify","isImageLike","src","isCanvasLike","isFunction","toDataURL","setStyleAttrs","isFillStroke","isGradient","setGradient","isPattern","setPattern","hasShadow","shadowKey","getShadowKey","shadowId","globalScale","getGlobalScale","scaleX","scaleY","offsetX","shadowOffsetX","offsetY","shadowOffsetY","blur_1","shadowBlur","shadowColor","stdDeviation","getIdURL","setShadow","setMetaData","metaData","getElementSSRData","isSilent","noRotateScale","m","setTransform","compress","noTranslate","mul","getMatrixStr","convertPolyShape","points","strArr","validatePolyShape","smooth","builtinShapesDef","circle","desc","normalizedDesc","item","createAttrsConvert","polyline","polygon","brushSVGPath","builtinShpDef","type","svgElType","strokePercent","willUpdate","hasShapeAnimation","needBuildPath","shapeChanged","createPathProxy","beginPath","pathUpdated","pathVersion","getVersion","elExt","__svgPathBuilder","__svgPathVersion","__svgPathStrokePercent","emphasis","ignore","emphasisStyle","states","normalFill","selectFill","select","fromFill","currentStates","liftColor","cursor","createCSSEmphasis","id","brush","Path","image","href","brushSVGImage","TSpan","font","DEFAULT_FONT","adjustTextY","getLineHeight","textBaseline","TEXT_ALIGN_TO_ANCHOR","textAlign","hasSeparateFont","separatedFontStr","fontStyle","fontSize","parseFontSize","parseFloat","fontFamily","DEFAULT_FONT_FAMILY","fontWeight","match","undefined","brushSVGTSpan","gradientTag","gradientAttrs","global","isLinearGradient","x1","y1","isRadialGradient","retrieve2","colors","colorStops","offset","round4","stopColor","stopsAttrs","gradientKey","gradientId","boundingRect","getBoundingRect","patternAttrs","repeat","noRepeat","repeatX","repeatY","isImagePattern","imageWidth_1","imageWidth","imageHeight_1","imageHeight","imageSrc","patternImage","Image","errMsg","assert","setSizeToVNode_1","vNode","img","svgEl","elm","setAttribute","createdImage","createOrUpdateImage","patternVNode","svgElement","clone","svgWidth","svgHeight","patternWidth","patternHeight","patternUnits","patternTransform","patternKey","patternId","setClipPath","clipPath","clipPathId","clipPathAttrs","createTextNode","insertBefore","parentNode","newNode","referenceNode","removeChild","node","appendChild","nextSibling","setTextContent","textContent","colonChar","xChar","emptyNode","isUndef","s","isDef","createKeyToOldIdx","beginIdx","endIdx","sameVnode","vnode1","vnode2","isSameKey","createElm","vnode","updateAttrs","isArray","ch","api","isObject","addVnodes","parentElm","before","vnodes","startIdx","removeVnodes","oldVnode","oldAttrs","cur","removeAttribute","cssText","charCodeAt","setAttributeNS","patchVnode","oldCh","newCh","oldKeyToIdx","idxInOld","elmToMove","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","updateChildren","svgId","SVGPainter","root","storage","refreshHover","process","configLayer","_opts","_id","_oldVNode","ssr","viewport","_viewport","svgDom","_svgDom","resize","getType","getViewportRoot","getViewportRootOffset","viewportRoot","offsetLeft","offsetTop","getSvgDom","refresh","renderToVNode","parent_2","patch","renderOneToVNode","list","getDisplayList","_width","_height","bgVNode","_bgVNode","backgroundColor","dirty","noop","createBackgroundVNode","_backgroundColor","mainVNode","_mainVNode","_paintList","animationCssStr","selectorNodes","animationNodes","bracketBegin","bracketEnd","selectors","animations","getCssString","styleNode","renderToString","cssAnimation","cssEmphasis","setBackgroundColor","getSvgRoot","out","currentClipPathGroup","prevClipPaths","listLen","clipPathsGroupsStack","clipPathsGroupsStackDepth","clipGroupNodeIdx","displayable","invisible","clipPaths","__clipPaths","prevLen","lca","max","i_1","i_2","groupAttrs","ret","display","getSize","viewportStyle","bgEl","getWidth","getHeight","dispose","innerHTML","clear","base64","prefix","encodeBase64","encodeURIComponent","install","registers","registerPainter"],"sourceRoot":""}